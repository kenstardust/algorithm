from sklearn.tree import DecisionTreeClassifier
from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
import numpy as np
import matplotlib.pyplot as plt

cancer=load_breast_cancer()
X_train,x_test,y_train,y_test=train_test_split(cancer.data,cancer.target,
                                               stratify=cancer.target,random_state=42)
tree=DecisionTreeClassifier(max_depth=4,random_state=0)
tree.fit(X_train,y_train)
print("{:.3f}".format(tree.score(X_train,y_train)))
print("{:.3f}".format(tree.score(x_test,y_test)))
from sklearn.tree import export_graphviz
export_graphviz(tree,out_file="tree.dot",class_names=["maligant","begin"],
                feature_names=cancer.feature_names,impurity=False,filled=True)
# import graphviz # 画图用
# with open("tree.dot") as f:
#     dot_graph=f.read()

# graph=graphviz.Source(dot_graph)
# graph.render("tree")
print("impoertancce: \n{}".format(tree.feature_importances_)) #查看某项数据的重要性
def plot_feature_importaces_cancer(model):
    n_features=cancer.data.shape[1]
    plt.barh(range(n_features),model.feature_importances_,align='center')
    plt.yticks(np.arange(n_features),cancer.feature_names)
    plt.xlabel("Feature importance")
    plt.ylabel("Feature")
    
plot_feature_importaces_cancer(tree)
