# import numpy as np 
# import matplotlib.pyplot as plt 
# import pandas as pd 
# import mglearn

# from sklearn.datasets import load_iris
# from sklearn.model_selection import train_test_split
# iris_dataset = load_iris()
# X_train,X_test,y_train,y_test = train_test_split(iris_dataset['data'],iris_dataset['target'],random_state=0)
# # 利用X_train中的数据创建DataFrame 
# # # 利用iris_dataset.feature_names中的字符串对数据列进行标记
# iris_dataframe = pd.DataFrame(X_train,columns=iris_dataset.feature_names)

# grr = pd.plotting.scatter_matrix(iris_dataframe,c=y_train,figsize=(15,15),marker='o',hist_kwds={'bins':20},s=60,alpha=8,cmap=mglearn.cm3)

# grr.show()

import mglearn 
import matplotlib.pyplot as plt 
import pandas as pd 
from sklearn.datasets import load_iris 
iris_dataset = load_iris() 
from sklearn.model_selection import train_test_split 
X_train,X_test,y_train,y_test = train_test_split(iris_dataset['data'],iris_dataset['target'],random_state=0) 
iris_dataframe=pd.DataFrame(X_train,columns=iris_dataset.feature_names) 
grr = pd.plotting.scatter_matrix(iris_dataframe,marker='o',c = y_train,hist_kwds={'bins':10},cmap=mglearn.cm3)
plt.show()
from sklearn.neighbors import KNeighborsClassifier
knn=KNeighborsClassifier(n_neighbors=1)

#检测1 knn.score(X_test,y_test)
#检测2 np.mean(y_pred==y_test)
